<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:ScreenToGif.Util.Converters;assembly=ScreenToGif.Util"
    xmlns:n="clr-namespace:ScreenToGif.Controls"
    xmlns:s="clr-namespace:System;assembly=mscorlib">

    <c:DoubleToPercentage x:Key="DoubleToPercentageConverter" />
    <c:BytesToSize x:Key="BytesToSizeConverter" />

    <ControlTemplate
        x:Key="Template.Encoding"
        TargetType="{x:Type n:EncoderListViewItem}">
        <Border
            x:Name="MainBorder"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="6" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Border
                    x:Name="InternalBorder"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    Margin="1"
                    Background="{TemplateBinding Icon}"
                    Effect="{x:Null}"
                    Opacity="{DynamicResource Element.Opacity}"
                    Visibility="Visible" />

                <n:ExtendedButton
                    x:Name="CancelButton"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    MaxWidth="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}"
                    Padding="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    ContentHeight="15"
                    ContentWidth="15"
                    Icon="{DynamicResource Vector.Close}"
                    Style="{DynamicResource Style.Button.NoText}"
                    Visibility="Hidden">
                    <n:ExtendedButton.ToolTip>
                        <ToolTip
                            x:Name="CancelToolTip"
                            Content="{DynamicResource S.Action.Cancel}"
                            Placement="Left"
                            VerticalOffset="-5" />
                    </n:ExtendedButton.ToolTip>
                </n:ExtendedButton>

                <Label
                    x:Name="PercentageLabel"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    MinWidth="50"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    BorderThickness="0"
                    Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Percentage}"
                    ContentStringFormat="{}{0:##0.0} %"
                    FontFamily="Segoe UI Semilight"
                    Foreground="{DynamicResource Element.Foreground.Gray112}" />

                <Label
                    Grid.Row="0"
                    Grid.Column="2"
                    Padding="0,1,0,0"
                    HorizontalAlignment="Stretch"
                    Content="{TemplateBinding Text}"
                    Foreground="{DynamicResource Element.Foreground}" />

                <ProgressBar
                    Grid.Row="1"
                    Grid.Column="2"
                    Height="4"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    IsIndeterminate="{TemplateBinding IsIndeterminate}"
                    Maximum="100"
                    Minimum="0"
                    Orientation="Horizontal"
                    Value="{TemplateBinding Percentage}" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>

                <Setter TargetName="CancelButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="InternalBorder" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>

            <Trigger Property="OutputType" Value="Gif">
                <Setter Property="Icon" Value="{DynamicResource Vector.Gif}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Apng">
                <Setter Property="Icon" Value="{DynamicResource Vector.Apng}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Webp">
                <Setter Property="Icon" Value="{DynamicResource Vector.Webp}" />
            </Trigger>

            <Trigger Property="OutputType" Value="Bmp">
                <Setter Property="Icon" Value="{DynamicResource Vector.Bmp}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Jpeg">
                <Setter Property="Icon" Value="{DynamicResource Vector.Jpg}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Png">
                <Setter Property="Icon" Value="{DynamicResource Vector.Apng}" />
            </Trigger>

            <Trigger Property="OutputType" Value="Avi">
                <Setter Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Mov">
                <Setter Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Mp4">
                <Setter Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Mkv">
                <Setter Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Webm">
                <Setter Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>

            <Trigger Property="OutputType" Value="Psd">
                <Setter Property="Icon" Value="{DynamicResource Vector.Psd}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Stg">
                <Setter Property="Icon" Value="{DynamicResource Vector.Project}" />
            </Trigger>

            <Trigger Property="IsIndeterminate" Value="True">
                <Setter TargetName="PercentageLabel" Property="Content" Value="~" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate
        x:Key="Template.Completed"
        TargetType="{x:Type n:EncoderListViewItem}">
        <Border
            x:Name="MainBorder"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border
                    x:Name="InternalBorder"
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="1"
                    Background="{DynamicResource Vector.Ok.Round}"
                    Effect="{x:Null}"
                    Opacity="{DynamicResource Element.Opacity}"
                    Visibility="Visible" />

                <n:ExtendedButton
                    x:Name="CancelButton"
                    Grid.Row="0"
                    Grid.Column="0"
                    MaxWidth="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}"
                    Padding="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    ContentHeight="15"
                    ContentWidth="15"
                    Icon="{DynamicResource Vector.Eraser}"
                    Style="{DynamicResource Style.Button.NoText}"
                    Visibility="Hidden">
                    <n:ExtendedButton.ToolTip>
                        <ToolTip
                            x:Name="CancelToolTip"
                            Content="{DynamicResource S.Encoder.Remove}"
                            Placement="Left"
                            VerticalOffset="-5" />
                    </n:ExtendedButton.ToolTip>
                </n:ExtendedButton>

                <Label
                    x:Name="FileSizeLabel"
                    Grid.Row="0"
                    Grid.Column="1"
                    MinWidth="45"
                    Margin="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    BorderThickness="0"
                    Content="{TemplateBinding SizeInBytes,
                                              Converter={StaticResource BytesToSizeConverter}}"
                    FontStyle="Italic"
                    Foreground="{DynamicResource Element.Foreground.Gray112}" />

                <StackPanel
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center">
                    <WrapPanel Orientation="Horizontal">
                        <TextBlock
                            Margin="0,0,5,0"
                            Foreground="{DynamicResource Element.Foreground}"
                            Text="{DynamicResource S.Encoder.Completed}" />

                        <TextBlock
                            x:Name="CopiedTextBlock"
                            Margin="0,0,5,0"
                            Visibility="Collapsed">
                            <Run
                                Foreground="{DynamicResource Element.Foreground}"
                                Text="{DynamicResource S.Encoder.Completed.Clipboard}" />
                        </TextBlock>

                        <TextBlock
                            x:Name="CopyFailedTextBlock"
                            Margin="0,0,5,0"
                            Visibility="Visible">
                            <Hyperlink
                                x:Name="CopyFailedHyperlink"
                                ToolTip="{DynamicResource S.Encoder.Error.Info}">
                                <Run Text="{DynamicResource S.Encoder.Completed.Clipboard.Fail}" />
                            </Hyperlink>
                        </TextBlock>

                        <TextBlock
                            x:Name="ExecutedTextBlock"
                            Margin="0,0,5,0"
                            Visibility="Collapsed">
                            <Hyperlink
                                x:Name="ExecutedHyperlink"
                                ToolTip="{DynamicResource S.Encoder.Completed.Command.Output}">
                                <Run Text="{DynamicResource S.Encoder.Completed.Command}" />
                            </Hyperlink>
                        </TextBlock>

                        <TextBlock
                            x:Name="ExecutionFailedTextBlock"
                            Margin="0,0,5,0"
                            Visibility="Visible">
                            <Hyperlink
                                x:Name="ExecutionFailedHyperlink"
                                ToolTip="{DynamicResource S.Encoder.Error.Info}">
                                <Run Text="{DynamicResource S.Encoder.Completed.Command.Fail}" />
                            </Hyperlink>
                        </TextBlock>
                    </WrapPanel>

                    <StackPanel
                        x:Name="UploadStackPanel"
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                        <TextBlock
                            x:Name="UploadedTextBlock"
                            ToolTip="{DynamicResource S.Encoder.Completed.Upload.Delete}"
                            Visibility="Collapsed">
                            <Hyperlink x:Name="UploadHyperlink">
                                <Run Text="{TemplateBinding UploadLinkDisplay}" />
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock
                            x:Name="UploadFailedTextBlock"
                            Visibility="Visible">
                            <Hyperlink
                                x:Name="UploadFailedHyperlink"
                                ToolTip="{DynamicResource S.Encoder.Error.Info}">
                                <Run Text="{DynamicResource S.Encoder.Completed.Upload.Fail}" />
                            </Hyperlink>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>

                <TextBlock
                    x:Name="TimeTextBlock"
                    Grid.Column="3"
                    Margin="5,3"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource Element.Foreground.Gray112}"
                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TotalTime, StringFormat={}{0:mm}:{0:ss}}">
                    <TextBlock.ToolTip>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Text="{DynamicResource S.Encoder.Completed.Elapsed}" />

                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="0"
                                Text="{DynamicResource S.Encoder.Completed.Elapsed.Analysis}" />
                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="1"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TimeToAnalyze, StringFormat={}{0:mm}:{0:ss}:{0:fff}}" />

                            <TextBlock
                                Grid.Row="2"
                                Grid.Column="0"
                                Text="{DynamicResource S.Encoder.Completed.Elapsed.Encoding}" />
                            <TextBlock
                                Grid.Row="2"
                                Grid.Column="1"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TimeToEncode, StringFormat={}{0:mm}:{0:ss}:{0:fff}}" />

                            <TextBlock
                                x:Name="UploadTimeHeaderTextBlock"
                                Grid.Row="3"
                                Grid.Column="0"
                                Text="{DynamicResource S.Encoder.Completed.Elapsed.Upload}" />
                            <TextBlock
                                x:Name="UploadTimeTextBlock"
                                Grid.Row="3"
                                Grid.Column="1"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TimeToUpload, StringFormat={}{0:mm}:{0:ss}:{0:fff}}" />

                            <TextBlock
                                x:Name="CopyTimeHeaderTextBlock"
                                Grid.Row="4"
                                Grid.Column="0"
                                Text="{DynamicResource S.Encoder.Completed.Elapsed.Copy}" />
                            <TextBlock
                                x:Name="CopyTimeTextBlock"
                                Grid.Row="4"
                                Grid.Column="1"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TimeToCopy, StringFormat={}{0:mm}:{0:ss}:{0:fff}}" />

                            <TextBlock
                                x:Name="ExecuteTimeHeaderTextBlock"
                                Grid.Row="5"
                                Grid.Column="0"
                                Text="{DynamicResource S.Encoder.Completed.Elapsed.Commands}" />
                            <TextBlock
                                x:Name="ExecuteTimeTextBlock"
                                Grid.Row="5"
                                Grid.Column="1"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TimeToExecute, StringFormat={}{0:mm}:{0:ss}:{0:fff}}" />
                        </Grid>
                    </TextBlock.ToolTip>
                </TextBlock>

                <n:ExtendedButton
                    x:Name="FileButton"
                    Grid.Column="4"
                    Padding="2,0"
                    ContentHeight="20"
                    ContentWidth="20"
                    Icon="{DynamicResource Vector.Gif}"
                    Style="{DynamicResource Style.Button.NoText}"
                    ToolTipService.HorizontalOffset="-5"
                    ToolTipService.Placement="Top">
                    <n:ExtendedButton.ToolTip>
                        <TextBlock Foreground="{DynamicResource Element.Foreground}">
                            <Run Text="{DynamicResource S.Encoder.OpenFile}" />
                            <LineBreak />
                            <Run Text="{TemplateBinding OutputFilename}" />
                        </TextBlock>
                    </n:ExtendedButton.ToolTip>
                </n:ExtendedButton>

                <n:ExtendedButton
                    x:Name="FolderButton"
                    Grid.Column="5"
                    Padding="2,0"
                    ContentHeight="20"
                    ContentWidth="20"
                    Icon="{DynamicResource Vector.Open}"
                    Style="{DynamicResource Style.Button.NoText}"
                    ToolTipService.HorizontalOffset="-5"
                    ToolTipService.Placement="Top">
                    <n:ExtendedButton.ToolTip>
                        <TextBlock Foreground="{DynamicResource Element.Foreground}">
                            <Run Text="{DynamicResource S.Encoder.ExploreFolder}" />
                            <LineBreak />
                            <Run Text="{TemplateBinding OutputPath}" />
                        </TextBlock>
                    </n:ExtendedButton.ToolTip>
                </n:ExtendedButton>
            </Grid>

            <Border.ContextMenu>
                <ContextMenu>
                    <n:ExtendedMenuItem
                        x:Name="CopyMenuItem"
                        Header="{DynamicResource S.Editor.Home.Copy}"
                        Icon="{DynamicResource Vector.Copy}" />
                    <Separator />
                    <n:ExtendedMenuItem
                        x:Name="CopyImageMenuItem"
                        Header="{DynamicResource S.Encoder.Copy.Image}"
                        Visibility="Collapsed" />
                    <n:ExtendedMenuItem
                        x:Name="CopyFilenameMenuItem"
                        Header="{DynamicResource S.Encoder.Copy.Filename}" />
                    <n:ExtendedMenuItem
                        x:Name="CopyFolderMenuItem"
                        Header="{DynamicResource S.Encoder.Copy.Folder}" />
                    <n:ExtendedMenuItem
                        x:Name="CopyLinkMenuItem"
                        Header="{DynamicResource S.Encoder.Copy.Link}"
                        Visibility="Collapsed" />
                </ContextMenu>
            </Border.ContextMenu>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>

                <Setter TargetName="CancelButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="InternalBorder" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>

            <Trigger Property="OutputType" Value="Gif">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Gif}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Apng">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Apng}" />
                <Setter TargetName="CopyImageMenuItem" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="OutputType" Value="Webp">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Webp}" />
            </Trigger>

            <Trigger Property="OutputType" Value="Bmp">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Bmp}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Jpeg">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Jpeg}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Png">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Apng}" />
            </Trigger>

            <Trigger Property="OutputType" Value="Avi">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Mov">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Mp4">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Mkv">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Webm">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Video}" />
            </Trigger>

            <Trigger Property="OutputType" Value="Psd">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Psd}" />
            </Trigger>
            <Trigger Property="OutputType" Value="Stg">
                <Setter TargetName="FileButton" Property="Icon" Value="{DynamicResource Vector.Project}" />
            </Trigger>

            <Trigger Property="CopiedToClipboard" Value="True">
                <Setter TargetName="CopiedTextBlock" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="CopyTaskException" Value="{x:Null}">
                <Setter TargetName="CopyFailedTextBlock" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="CommandExecuted" Value="True">
                <Setter TargetName="ExecutedTextBlock" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="CommandTaskException" Value="{x:Null}">
                <Setter TargetName="ExecutionFailedTextBlock" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="AreMultipleFiles" Value="True">
                <Setter TargetName="FileButton" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="Uploaded" Value="True">
                <Setter TargetName="UploadedTextBlock" Property="Visibility" Value="Visible" />
                <Setter TargetName="CopyLinkMenuItem" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="UploadTaskException" Value="{x:Null}">
                <Setter TargetName="UploadFailedTextBlock" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger SourceName="UploadedTextBlock" Property="Visibility" Value="Visible">
                <Setter TargetName="UploadStackPanel" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="UploadFailedTextBlock" Property="Visibility" Value="Visible">
                <Setter TargetName="UploadStackPanel" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="TotalTime" Value="{x:Static s:TimeSpan.Zero}">
                <Setter TargetName="TimeTextBlock" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="TimeToUpload" Value="{x:Static s:TimeSpan.Zero}">
                <Setter TargetName="UploadTimeHeaderTextBlock" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="UploadTimeTextBlock" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="TimeToCopy" Value="{x:Static s:TimeSpan.Zero}">
                <Setter TargetName="CopyTimeHeaderTextBlock" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="CopyTimeTextBlock" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="TimeToExecute" Value="{x:Static s:TimeSpan.Zero}">
                <Setter TargetName="ExecuteTimeHeaderTextBlock" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ExecuteTimeTextBlock" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate
        x:Key="Template.Error"
        TargetType="{x:Type n:EncoderListViewItem}">
        <Border
            x:Name="MainBorder"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border
                    x:Name="InternalBorder"
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="2"
                    Background="{DynamicResource Vector.Cancel.Round}"
                    Effect="{x:Null}"
                    Opacity="{DynamicResource Element.Opacity}"
                    Visibility="Visible" />

                <n:ExtendedButton
                    x:Name="CancelButton"
                    Grid.Row="0"
                    Grid.Column="0"
                    MaxWidth="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}"
                    Padding="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    ContentHeight="15"
                    ContentWidth="15"
                    Icon="{DynamicResource Vector.Eraser}"
                    Style="{DynamicResource Style.Button.NoText}"
                    Visibility="Hidden">
                    <n:ExtendedButton.ToolTip>
                        <ToolTip
                            Content="{DynamicResource S.Encoder.Remove}"
                            Placement="Left"
                            VerticalOffset="-5" />
                    </n:ExtendedButton.ToolTip>
                </n:ExtendedButton>

                <Label
                    Grid.Row="0"
                    Grid.Column="2"
                    Padding="0,1,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Content="{DynamicResource S.Encoder.Error}"
                    Foreground="{DynamicResource Element.Foreground}" />

                <n:ExtendedButton
                    x:Name="DetailsButton"
                    Grid.Column="3"
                    Padding="2,0"
                    ContentHeight="20"
                    ContentWidth="20"
                    Icon="{DynamicResource Vector.Application}"
                    Style="{DynamicResource Style.Button.NoText}">
                    <n:ExtendedButton.ToolTip>
                        <ToolTip
                            Content="{DynamicResource S.Encoder.Details}"
                            HorizontalOffset="-5"
                            Placement="Top" />
                    </n:ExtendedButton.ToolTip>
                </n:ExtendedButton>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>

                <Setter TargetName="CancelButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="InternalBorder" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate
        x:Key="Template.Canceled"
        TargetType="{x:Type n:EncoderListViewItem}">
        <Border
            x:Name="MainBorder"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="6" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <n:ExtendedButton
                    x:Name="CancelButton"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    MaxWidth="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}"
                    Padding="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    ContentHeight="15"
                    ContentWidth="15"
                    Icon="{DynamicResource Vector.Close}"
                    Style="{DynamicResource Style.Button.NoText}">
                    <n:ExtendedButton.ToolTip>
                        <ToolTip
                            x:Name="CancelToolTip"
                            Content="{DynamicResource S.Encoder.Remove}"
                            Placement="Left"
                            VerticalOffset="-5" />
                    </n:ExtendedButton.ToolTip>
                </n:ExtendedButton>

                <Label
                    x:Name="PercentageLabel"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    MinWidth="45"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    BorderThickness="0"
                    Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Percentage}"
                    ContentStringFormat="{}{0:##0.0} %"
                    FontFamily="Segoe UI Semilight"
                    Foreground="{DynamicResource Element.Foreground.Gray112}" />

                <Label
                    Grid.Row="0"
                    Grid.Column="2"
                    Padding="0,1,0,0"
                    HorizontalAlignment="Stretch"
                    Content="{DynamicResource S.Encoder.Canceled}"
                    Foreground="{DynamicResource Element.Foreground}" />

                <ProgressBar
                    Grid.Row="1"
                    Grid.Column="2"
                    Height="4"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Maximum="100"
                    Minimum="0"
                    Orientation="Horizontal"
                    Value="{TemplateBinding Percentage}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate
        x:Key="Template.File"
        TargetType="{x:Type n:EncoderListViewItem}">
        <Border
            x:Name="MainBorder"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Border
                    x:Name="InternalBorder"
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="1"
                    Background="{DynamicResource Vector.FilePermission}"
                    Effect="{x:Null}"
                    Opacity="{DynamicResource Element.Opacity}"
                    Visibility="Visible" />

                <n:ExtendedButton
                    x:Name="CancelButton"
                    Grid.Row="0"
                    Grid.Column="0"
                    MaxWidth="{Binding Path=Height, RelativeSource={RelativeSource Mode=Self}}"
                    Padding="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    ContentHeight="15"
                    ContentWidth="15"
                    Icon="{DynamicResource Vector.Eraser}"
                    Style="{DynamicResource Style.Button.NoText}"
                    Visibility="Hidden">
                    <n:ExtendedButton.ToolTip>
                        <ToolTip
                            Content="{DynamicResource S.Encoder.Remove}"
                            Placement="Left"
                            VerticalOffset="-5" />
                    </n:ExtendedButton.ToolTip>
                </n:ExtendedButton>

                <Label
                    Grid.Row="0"
                    Grid.Column="2"
                    Padding="0,1,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Content="{DynamicResource S.Encoder.DeletedMoved}"
                    Foreground="{DynamicResource Element.Foreground}" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>

                <Setter TargetName="CancelButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="InternalBorder" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Encoder ListViewItem  -->
    <Style TargetType="{x:Type n:EncoderListViewItem}">
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />

        <Style.Triggers>
            <Trigger Property="Status" Value="Processing">
                <Setter Property="Template" Value="{StaticResource Template.Encoding}" />
            </Trigger>
            <Trigger Property="Status" Value="Completed">
                <Setter Property="Template" Value="{StaticResource Template.Completed}" />
            </Trigger>
            <Trigger Property="Status" Value="Error">
                <Setter Property="Template" Value="{StaticResource Template.Error}" />
            </Trigger>
            <Trigger Property="Status" Value="Canceled">
                <Setter Property="Template" Value="{StaticResource Template.Canceled}" />
            </Trigger>
            <Trigger Property="Status" Value="FileDeletedOrMoved">
                <Setter Property="Template" Value="{StaticResource Template.File}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource Item.MouseOver.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Item.MouseOver.Border}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource Item.SelectedInactive.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Item.SelectedInactive.Border}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>

                <Setter Property="Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".7" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>